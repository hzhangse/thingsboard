#
# Copyright Â© 2016-2019 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-postgres-node-3
  labels:
    postgres-pvname: pv-postgres-node-3
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /postgres-data
    
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - okd-node-3

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
#  namespace: thingsboard
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
  selector:
    matchLabels:
      postgres-pvname: pv-postgres-node-3


            
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
#  namespace: thingsboard
  labels:
    app: postgres
spec:
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pv-claim
      containers:
      - name: postgres
        imagePullPolicy: Always
        image: postgres:9.6
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: "thingsboard"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 5
          timeoutSeconds: 1
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: tb-database
#  namespace: thingsboard
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
  - port: 5432
    name: postgres
---



apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pgadmin4
#  namespace: thingsboard
  labels:
    app: pgadmin4
spec:
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      containers:
      - name: pgadmin4
        imagePullPolicy: Always
        image: dpage/pgadmin4
        ports:
        - containerPort: 80
          name: pgadmin4-port
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: "rainbow954@163.com"
        - name: PGADMIN_DEFAULT_PASSWORD
          value: "admin123"
        volumeMounts:
        - mountPath: /var/lib/pgadmin4
          name: pgadmin4-data          
      volumes:
      - name: pgadmin4-data
        emptyDir: {}
      restartPolicy: Always          
---
apiVersion: v1
kind: Service
metadata:
  name: tb-pgadmin4
#  namespace: thingsboard
spec:
  type: ClusterIP
  selector:
    app: pgadmin4
  ports:
  - port: 80
    name: pgadmin4-port
---



